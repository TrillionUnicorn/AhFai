name: PRODUCTION_2 CI

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'PRODUCTION/PRODUCTION_2/**'
      - '.github/workflows/production-2-ci.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'PRODUCTION/PRODUCTION_2/**'
      - '.github/workflows/production-2-ci.yml'

jobs:
  test-backend:
    name: Test Backend (FastAPI)
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: PRODUCTION/PRODUCTION_2/backend
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: PRODUCTION/PRODUCTION_2/backend/requirements.txt
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Run linter
        run: |
          pip install flake8
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics || true
      
      - name: Run type checker
        run: |
          pip install mypy
          mypy . --ignore-missing-imports || true
      
      - name: Run tests
        run: |
          pip install pytest pytest-cov
          pytest --cov=. --cov-report=xml || true
      
      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          files: ./PRODUCTION/PRODUCTION_2/backend/coverage.xml
          flags: backend
          name: backend-coverage

  test-frontend:
    name: Test Frontend (Next.js)
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: PRODUCTION/PRODUCTION_2/frontend
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: PRODUCTION/PRODUCTION_2/frontend/package-lock.json
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run linter
        run: npm run lint || true
      
      - name: Run type check
        run: npm run type-check || true
      
      - name: Run tests
        run: npm test || true
      
      - name: Build application
        run: npm run build
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: production-2-frontend-build
          path: PRODUCTION/PRODUCTION_2/frontend/.next
          retention-days: 7

  docker:
    name: Docker Build Test
    runs-on: ubuntu-latest
    needs: [test-backend, test-frontend]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build Docker images
        working-directory: PRODUCTION/PRODUCTION_2
        run: docker-compose build
      
      - name: Test Docker containers
        working-directory: PRODUCTION/PRODUCTION_2
        run: |
          docker-compose up -d postgres
          sleep 10
          docker-compose ps
          docker-compose down

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Backend security audit
        working-directory: PRODUCTION/PRODUCTION_2/backend
        run: |
          python -m pip install --upgrade pip
          pip install safety
          safety check -r requirements.txt || true
      
      - name: Frontend security audit
        working-directory: PRODUCTION/PRODUCTION_2/frontend
        run: |
          npm ci
          npm audit --audit-level=moderate || true

